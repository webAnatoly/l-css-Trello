//LOGO **********************************************************
.logo {
  height: 3.25rem;
  margin-left: 3rem;
}


// SEARCH **********************************************************
.search {
  flex: 0 0 40%; // [Длинный коммент] здесь flex-shrink: 0 не позволит элементу уменьшаться если вьюпорт уменьшается, но так как у нас ширина задана в процентах посредством flex-base: 40% то элемент будет уменьшаться при уменьшении вьюпорта.

  // выровнять инпут и лупу внитри <form>
  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    font-family: inherit; // [Длинный комментарий] элемент <input> не наследует свойства шрифтом автоматически, поэтому прописываем inherit, чтобы <input> унаследовал родительские шрифты
    font-size: inherit;   // [Длинный комментарий] элемент <input> не наследует свойства шрифтом автоматически, поэтому прописываем inherit, чтобы <input> унаследовал родительские шрифты (в данном случае размер шрифта будет наследоваться от header, потому что у него прописан font-size)
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s;
    margin-right: -3.25rem; // чтобы кнопка наехала на инпут

    &:focus { 
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button { // когда фокус на инпуте меняем также и фон кнопики поиска
    background-color: var(--color-grey-light-3);
  }

  &__button {
    outline: none;
    border: none;
    background-color: var(--color-grey-light-2);
    transition: all .2s;

    &:focus,
    &::-moz-focus-inner { // убрать рамку в firefox
      outline: none;
      border: none;
    }

    &:active {
      transform: translateY(2px);
    }

    &:hover {
      cursor: pointer;
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); // задать цвет иконки
  }
}

// USER NAVIGATION **********************************************************
.user-nav {
  align-self: stretch; // растянуть по-высоте секцию .user-nav (точнее по оси "cross axis")

  display: flex;
  align-items: center;

  & > div {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center;
  }
  & > div:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2); // цвет иконки
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    overflow: hidden;

    // выровнять текст по центру верт. и горизнот.
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

// SIDE NAVIGATION **********************************************************
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;
    &:not(:last-child) {
      margin-bottom: .5rem;
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform .2s,
                width .4s cubic-bezier(1,0,0,1) .2s, // для ширины delay .2s
                background-color .1s;
              }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    
    position: relative;
    z-index: 10; // z-index работает на спозиционированных элементах. Applies to:	positioned elements.

    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // current color is just the color of the current element or the parent element. Например если на ховере родителя будет менятся color то и иконка будет менять свой цвет.
  }
}

// LEGAL TEXT **********************************************************
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

// GALLERY  **********************************************************
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block; // убрать у картинок небольшое пространство снизу, которое появляется там если оставить их inline
  }
}

// HOTEL OVERVIEW  **********************************************************
.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem;
  }

  &__stars {
    margin-right: auto; // отступит с права на полную катушку и прижмется к левому краю, а остольные блоки прижмутся к правому краю
    display: flex; // что-бы svg звезды показывались не как inline, а как flex элементы. В этом случае они выравняются вертикально по центру, даже без align-items: center
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: .5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: white;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch; // растянуться по высоте родителя

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px; // чтобы уменьшить расстояние между -average и -count
  }

  &__rating-count {
    font-size: .8rem;
    text-transform: uppercase;
  }
}

// BUTTON INLINE **********************************************************
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor; // the border will have the exact same color as the text, and that's what we want here.
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: .2s;

  &:hover {
    color: var(--color-grey-dark-1); // border-bottom при ховере тоже будет менять цвет, потому что border-bottom задано цвет через currenColor
    animation: pulsate 1s infinite;
  }

  &:focus { 
    outline: none;
  }
}

@keyframes pulsate { // анимация для кнопки
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}