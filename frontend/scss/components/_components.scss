//LOGO **********************************************************
.logo {
  height: 3.25rem;
  margin-left: 3rem;
}


// SEARCH **********************************************************
.search {
  flex: 0 0 40%; // [Длинный коммент] здесь flex-shrink: 0 не позволит элементу уменьшаться если вьюпорт уменьшается, но так как у нас ширина задана в процентах посредством flex-base: 40% то элемент будет уменьшаться при уменьшении вьюпорта.

  // выровнять инпут и лупу внитри <form>
  display: flex;
  align-items: center;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    /* форму поиска ставим в конец ряда. Она будет переносится на маленьких
    экранах вниз, потому что родителю в соответствующем медиа запросе пропишем
    flex-wrap: wrap , а родитель у нас элемент с классом .header */ 
    order: 1; // flex-item order
    flex: 0 0 95%;
  }

  &__input {
    font-family: inherit; // [Длинный комментарий] элемент <input> не наследует свойства шрифтом автоматически, поэтому прописываем inherit, чтобы <input> унаследовал родительские шрифты
    font-size: inherit;   // [Длинный комментарий] элемент <input> не наследует свойства шрифтом автоматически, поэтому прописываем inherit, чтобы <input> унаследовал родительские шрифты (в данном случае размер шрифта будет наследоваться от header, потому что у него прописан font-size)
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s;
    margin-right: -3.25rem; // чтобы кнопка наехала на инпут

    &:focus { 
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__input:focus + &__button { // когда фокус на инпуте меняем также и фон кнопики поиска
    background-color: var(--color-grey-light-3);
  }

  &__button {
    outline: none;
    border: none;
    background-color: var(--color-grey-light-2);
    transition: all .2s;

    &:focus,
    &::-moz-focus-inner { // убрать рамку в firefox
      outline: none;
      border: none;
    }

    &:active {
      transform: translateY(2px);
    }

    &:hover {
      cursor: pointer;
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); // задать цвет иконки
  }
}

// USER NAVIGATION **********************************************************
.user-nav {
  align-self: stretch; // растянуть по-высоте секцию .user-nav (точнее по оси "cross axis")

  display: flex;
  align-items: center;

  & > div {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center;
  }
  & > div:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2); // цвет иконки
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    overflow: hidden;

    // выровнять текст по центру верт. и горизнот.
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

// SIDE NAVIGATION **********************************************************
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex; // чтобы кнопки из левого сайдбара расположились по горизонтали одна за другой
    margin: 0;
  }

  &__item {
    position: relative;
    &:not(:last-child) {
      margin-bottom: .5rem;

      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0; // remove margin
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1; // чтобы каждый элемент (<li>) с классом .side-nav__item заполнил собой всё доступное пространство
    }
  }

  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform .2s,
                width .4s cubic-bezier(1,0,0,1) .2s, // для ширины delay .2s
                background-color .1s;
              }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    
    position: relative;
    z-index: 10; // z-index работает на спозиционированных элементах. Applies to:	positioned elements.

    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center; // выровнять текст по центру
      padding: 2rem;
    }

    @media only screen and (max-width: $bp-small) {
      flex-direction: column; // чтобы иконки стали над текстом
      padding: 1.5rem .5rem;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // current color is just the color of the current element or the parent element. Например если на ховере родителя будет менятся color то и иконка будет менять свой цвет.
  
    @media only screen and (max-width: $bp-small) {
      margin-right: 0; // маржин в ноль, чтобы иконки стали по центру
      margin-bottom: .7rem;
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

// LEGAL TEXT **********************************************************
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none; // скрыть legal в мобильной версии
  }
}

// GALLERY  **********************************************************
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block; // убрать у картинок небольшое пространство снизу, которое появляется там если оставить их inline
  }
}

// HOTEL OVERVIEW  **********************************************************
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }

  &__stars {
    margin-right: auto; // отступит с права на полную катушку и прижмется к левому краю, а остольные блоки прижмутся к правому краю
    display: flex; // что-бы svg звезды показывались не как inline, а как flex элементы. В этом случае они выравняются вертикально по центру, даже без align-items: center
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: .5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: white;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch; // растянуться по высоте родителя

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
    }
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px; // чтобы уменьшить расстояние между -average и -count
  
    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }

  &__rating-count {
    font-size: .8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: .5rem;
    }
  }
}

// BUTTON INLINE **********************************************************
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor; // the border will have the exact same color as the text, and that's what we want here.
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: .2s;

  & span { // для кнопки со стрелкой
    margin-left: 3px;
    transition: margin-left .2s;
  }

  &:hover {
    color: var(--color-grey-dark-1); // border-bottom при ховере тоже будет менять цвет, потому что border-bottom задано цвет через currenColor
    span {
      margin-left: 8px; // для кнопки со стрелкой
    }
  }

  &:focus { 
    outline: none;
  }

  &--animation:hover {
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate { // анимация для кнопки
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

// PARAGRAPH **********************************************************
.paragraph:not(:last-of-type) { // задать маржин всем, кроме последнего параграфа
  margin-bottom: 2rem;
}




// LIST **********************************************************
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  // каждый item будет занимть половину ширины родителя
  &__item {
    flex: 0 0 50%;
    margin-bottom: .7rem;

    display: flex; // чтобы выровнять svg иконку &__item::before и текст &__item вертикально в одну линию
    align-items: center;
  }

  &__item::before {
    content:"";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;

    // для браузеров не поддерживающих mask-image
    background-image: url(./../img/chevron-thin-right.svg);
    background-size: cover;

    // для браузеров поддерживающих mask-image 
    @supports (mask-image: url()) {
      background-image: none;
      background-color: var(--color-primary);
      mask-image: url(./../img/chevron-thin-right.svg); // The mask-image CSS property sets the image that is used as mask layer for an element.
      mask-size: cover;
    }
  }
}


// RECOMMEND **********************************************************
.recommend {
  font-size: 1.4rem;
  color: var(--color-grey-dark-3);

  display: flex;
  align-items: center;

  &__count {
    margin-right: auto; // see more for this trick http://next.plnkr.co/plunk/dTCZuhuTLIre2QJA
  }

  &__friends {
    display: flex;
    align-items: center;
  }

  &__photo {
    box-sizing: content-box; // здесь нам как-раз нужно дефолтное поведение, при котором бордер будет прибавлятся к ширине картинке, а не встраиваться в неё
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -1.5rem;
    }

  }
}

// REVIEWS **********************************************************
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  margin-bottom: 3.5rem;
  padding: 3rem;
  position: relative; // чтобы можно было .review::before абсолютно позиционировать
  overflow: hidden; // чтобы декоративные кавычки не выходили за пределы блока

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    z-index: 10; // чтобы декоротивные кавычки были за текстом
    position: relative; // без position z-index не будет работать
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto; // margin auto trick for using in flex-box parent see http://next.plnkr.co/plunk/dTCZuhuTLIre2QJA
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: .4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    font-size: 2.2rem;
    font-weight: 300;
    color: var(--color-primary);
  }

  &::before { // декоративные фоновые ковычки
    content: '\201C';
    position: absolute;
    top: -1.75rem;
    left: -1rem;
    font-size: 20rem;
    line-height: 1;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }
}

// CALL TO ACTION **********************************************************
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

// ANOTHER BUTTON **********************************************************
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(to right,
    var(--color-primary-light), var(--color-primary-dark));
  color: #fff;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  
  // реализация меняющихся надписей в кнопке
  & > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all .2s;
  }
  
  &__visible {
    padding: 2rem 7.5rem; // тут padding задает размер кнопки
    transition: all .2s;
  }

  &__invisible {
    position: absolute;
    padding: 2rem 0; // если оставить 7.5rem то текст почему-то не будет помещаться в одну строку
    left: 0;
    top: -100%;
  }

  &:hover {
      background-image: linear-gradient(to left,
    var(--color-primary-light), var(--color-primary-dark));
  }

  &:hover {
    .btn__visible {
      transform: translateY(100%); // [Длинный коммент в одну строку] Здесь используется transform потому что элемент имеет позицию relative. Т.е. если бы было position: absolute, то можно было top:, left: и т.д. но так как элемент имеет позицию relative, то очень удобно двигать такие элементы с помощью transform.
    }

    .btn__invisible {
      top: 0;
    }
  }

  &:focus {
    outline: none;
  }

  &::-moz-focus-inner {
    border: none;
  }
}